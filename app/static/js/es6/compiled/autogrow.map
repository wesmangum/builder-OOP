{"version":3,"file":"autogrow.js","sources":["/Users/wesmangum/Documents/Code/builder-OOP/app/static/js/es6/autogrow.es6.js"],"names":[],"mappings":"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","sourcesContent":["/* global ajax, audioBeanStalk, audioDead */\n/* jshint unused: false */\n\n(function () {\n  'use strict';\n\n  init();\n\n  function init() {\n    $('#autogrow').click(autoGrow);\n    slider();\n  }\n\n  var isOn = false;\n  var timer;\n\n  function autoGrow() {\n    isOn = !isOn;\n    $('#autogrow').parent().toggleClass('on');\n\n    if(isOn){\n      start();\n    }else{\n      clearInterval(timer);\n    }\n  }\n\n  function start() {\n    clearInterval(timer);\n    timer = setInterval(growing, 1000);\n  }\n\n  function growing() {\n    $('.alive:not(.beanstalk, .chopped)').parent().map((index, t)=>$(t).attr('data-id')).each((item, value)=>{\n      var userId = $('#user').attr('data-id');\n      var tree = $(`.tree[data-id=${value}]`);\n      var limit = parseFloat($('#value').text());\n\n      ajax(`/trees/${value}/grow`, 'put', null, response=>{\n        tree.replaceWith(response);\n\n        var height = parseFloat($(response).children('.height').text());\n\n        if(height >= limit){\n          ajax(`/trees/${value}/chop`, 'put', {userId: userId}, r=>{\n            tree.replaceWith(r.html);\n            $('#wood').text(`Wood: ${r.user.wood.toFixed(2)}`);\n          }, 'json');\n        }\n\n        if($(response).hasClass('beanstalk')){\n          audioBeanStalk.play();\n        }\n        if($(response).hasClass('dead')){\n          audioDead.play();\n        }\n      });\n    });\n  }\n\n  function slider() {\n    $('#slider').noUiSlider({\n    \tstart: 4,\n    \trange: {\n    \t\t'min': 4,\n    \t\t'max': 9999\n    \t},\n      serialization: {\n    \t\tlower:[\n    \t\t  $.Link({\n    \t\t\ttarget: $('#value'),\n          method: 'text'\n        })],\n    \t\tformat: {\n    \t\t\tdecimals: 0,\n          postfix: ' ft'\n    \t\t}\n    \t}\n    });\n  }\n\n})();\n"]}